제1 정규화 - 모든 속성(attribute)을 원자값으로 분해 하는 것
제2 정규화 - 제1 정규화 이후 기본키가 아닌 속성이 기본키에 완전 함수 종속되는 것
제3 정규화 - 제2 정규화 이후 기본키 외에는 속성간의 종속성이 존재하지 않는 정규형

외부파일 Datatype
BLOB = (6,400 BYTE) 즉 64k
MEDIAMBLOB = 8M
LONGBLOB = 4G

기본키는 1개만 존재 할 수 있고, 2개의 기본키가 결합하여 1개의 키가 되는 것


★외래키(FOREIGN KEY)- 참조무결성

외래키설정 = CONSTRAINT fk명칭 FOREIGN KEY (외래키속성) REFERENCES 참조테이블(참조기본키);
외래키삭제 = ALTER TABLE 테이블명 DROP CONSTRAINT fk명칭;
외래키추가 = ALTER TABLE 테이블명 ADD CONSTRAINT fk명칭 FOREIGN KEY (외래키속성) REFERENCES 참조테이블(참조기본키);
외래키해제 = SET foreign_key_checks=0;
외래키설정 = SET foreign_key_checks=1;

-- 외래키 참조무결성 해제/설정 으로 참조무결성을 맞추는 법
SET foreign_key_checks=0; -- 해제
SET foreign_key_checks=1; -- 설정

-- ALTER를 이용하여 CONSTRANINT를 이용하여 DROP와 ADD를 이용하여 외래키를 해제하고 다시 설정하는 법
ex))
ALTER TABLE 대리점 DROP CONSTRAINT fk_프랜차이즈_본사;
ALTER TABLE 대리점 ADD CONSTRAINT fk_프랜차이즈_본사 FOREIGN KEY (프랜번호) REFERENCES 프랜차이즈_본사(번호);


★참조무결성을 유지하기 위한 UPDATE, DELETE

FOREIGN KEY (외래키속성) REFERENCES 참조테이블(참조기본키) ON UPDATE CASCADE
 =기본키가 업데이트 되면 참조하는 외래키도 변경
FOREIGN KEY (외래키속성) REFERENCES 참조테이블(참조기본키) ON DELETE CASCADE
 =기본키가 삭제되면 참조하는 외래키도 변경


1. 데이터베이스 특징
 가. 통합된 데이터
 나. 실시간 접근성
 다. 계속적 변화
 라. 동시 사용(공유)
 마. 내용에 의한 참조
 바. 중복된 자료는 존재하지 않는다

2. 데이터베이스 특징
 가. 물리스키마(저장DB)
     (DBMS) = ex) mysql, mariasql, mssql....etc
 나. 논리스키마
  1). 내부스키마 (사용자 : DBA (데이터베이스 관리자)) - SQL
  2). 개념스키마 (사용자 : DBA (데이터베이스 관리자)) - SQL
  3). 외부스키마 (사용자 : 응용프로그래머, 일반사용) - DML

3.

4. 릴레이션(테이블)
------------------ 축구 책 ------------------ 
 도서번호     제목         출판사     가격
 101        축구의역사     a출판    32,000
 102        축구의규칙     b출판    22,000
 103        축구의기초     c출판    12,000
 104        축구의이해     d출판    38,000
 105        축구의미래     e출판    15,000
- 축구책 릴레이션(테이블)은 도서번호, 제목, 출판사, 가격이라는 에트리뷰트(컬럼)로 구성된다.
- 축구책 릴레이션(테이블)은 디그리(차수, 릴레이션을 구성하는 에트리뷰트 갯수) = 4
- 축구책은 튜플(레코드)
- 축구책의 카디널리티(튜플의 갯수) = 5
- 인스턴스 = 튜플의 집합(자료집합) 

------------------ 판매내역 ------------------
판매번호     회원명         판매금액     도서번호
     1         이몽룡          32,000          101
     2         성춘향          22,000          102
     3         강감찬          12,000          103
     4         변사또          38,000          104
     5         알리앤          15,000          105
- 릴레이션십 = 릴레이션의 관계
   축구책 릴레이션과 판매내역 릴레이션은 도서번호로 릴레이션십을 구성한다.
- 도메인(domain) = 에트리뷰트(컬럼)가 취할 수 있는 값(원자값, 쪼갤 수 없는 단위)
- 에트리뷰트(컬럼)의 순서는 상관없다
- 튜플(레코드)의 순서는 상관없다

5. 무결성 제약조건
 가. 개체 무결성(기본키와 관련된 조건)
   1). 기본키는 중복 된 값일 수 없다. (UNIQUE)
   2). 기본키는 반드시 입력되어야한다. (NOT NULL)

6. 참조무결성 제약조건
  가. 참조 릴레이션의 기본키값과 같거나 또는 NULL 값이여야 한다
  나. 참조 릴레이션의 값이 변경, 삭제, 삽입 즉시 변경, 삭제, 삽입되어야 한다

7. 릴레이션십(관계)
 가. ERD(Entity Relation Diagram)
   1) Entity(개체) - 정규화과정을 통하여 도출 된 릴레이션
   2) RelationShip(관계) - 특별한 Attribute(외래키)에 의해서 성립
   3) Attribute(속성)
 나. 관계종류
   1) 1:1
   2) 1:n
   3) n:m

8. 정규화
  가. 이상현상
   1) 삽입이상(insert anomaly) : 튜플(레코드) 삽입시 특정 에트리뷰트(컬럼)에 삽입 될 도메인이
                                       존재하지 않아 잘못 된 또는 null값이 입력되는 현상
   2) 삭제이상(delete anomaly) : 튜플(레코드) 삭제시 특정 에트리뷰트(컬럼)에 관련 된 다른
                                        튜플(레코드)까지 삭제되는 현상
   3) 갱신이상(update anomaly) : 튜플(레코드)수정시
  나. 정규화(이상현상 해결)
   1) 제1정규형
     가) 모든 도메인이 원자값으로 구성된 릴레이션
   2) 제2정규형
     가) 릴레이션1이 제1정규형이고 기본키가 아닌 속성이 기본키에 완전 함수종속일 때
       = 제1정규형을 만족하면서 기본키에 완전 함수종속)
   3) 제3정규형
      가) 릴레이션이 제2정규형이면서 PK가 아닌 에트리뷰트가 PK에 비이행적 함수종속 될 때

9. 부록 SQL(Database Language)
  1. 정의어(DDL)
    가) CREATE(DB, USER, VIEW, INDEX 등) = 생성
    나) ALTER(상동) = 변경
    다) DROP(상동) = 삭제
  2. 조작어(DML)
    가) SELECT 에트리뷰트(컬럼) FROM 릴레이션(테이블) WHERE 조건
    나) INSERT INTO VALUES
    다) UPDATE 릴레이션(컬럼)  SET 에트리뷰트(컬럼) WHERE 조건
    라) DELETE 릴레이션(컬럼) FROM WHERE 조건
    
  3. 제어어(DCL)
    가) GRANT
    나) REVOKE
  








