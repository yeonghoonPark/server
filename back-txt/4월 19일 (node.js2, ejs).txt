node.js를 이용한 서버 구축 프로세스
1. node.js 설치
2. 서버로 작업 할 폴더 생성
3. package.json생성 => 터미널에서 npm init => entry point는 정확하게 지정
4. express 라이브러리 설치 => npm install express
5. entry point에서 지정한 서버파일 생성
6. post방식의 요청시 body-parser를 이용하여 요청값 수신
7. ejs 설치

---------------------------------------------------------------------------------

서버 작업할
todoApp 폴더 생성

package.json만들기 (package.json 은 환경설정 파일이다.)
터미널에서
npm init
entry point => server.js

작업 할 파일 생성
entry point로 지정한 server.js 이름으로 파일 만들기

nodemon 설치
터미널에서
npm install nodemon 
package.json에서 script부분 text아래
"start": "node ./server.js",
"dev": "nodemon ./server.js"
그 후 터미널에서
npm run dev

express 라이브러리 설치
터미널에서 
npm install express
그 후에 
const express = require('express');
const app = express();

bodyparser middlewear
app.use(express.urlencoded({extended:true}));
app.use(express.json());

serveropen
app.listen(경로, ()=>{
    console.log('port opened successfully');
});
터미널에서
node entry point명
즉, entry point명이 server.js라면
node server.js

몽고db에 접근할 수 있는 모듈설치
터미널에서
npm install mongodb

mongoDB 연동 준비
변수선언
const MongoClient = require('mongodb').MongoClient;
mongoDB 연동, DB와 관련된 메서드는 error과 result가 들어간다
MongoClient.connect(도메인, (에러, 결과)=>{
    if(에러){
        return(
            console.log('데이터베이스 접근실패')
        );
    }
})


폼에서 서버로 자료를 보낼 때는 action="" 과 method="" 가 필요하다
<form action="/add" method="post">
그리고 인풋박스의 값이 전달 될 것인데 그 이름을 보낼 이름이 name="" 이다
<input type="text" class="form-control" name="title">
<input type="text" class="form-control" name="order">

mongodb.com 에서 db생성하고 app으로 연결 할 수 있는 도메인?
mongodb+srv://admin:qwer1234@cluster0.pi799.mongodb.net/todoappDB?retryWrites=true&w=majority

(구글에서 nodejs mongodb 또는 nodejs mysql 을 검색하면 연동하는 자료가 많다)

---------------------------------------------------------------------------------

프론트에서 서버로 자료를 전송할 땐 get, post가 가장 대표적.
서버가 프론트로 자료를 전송하는 방법은?
서버로부터 넘어온 자료를 프론트에서 출력하기 위해서 ejs를 사용한다.

ejs 설치
터미널에서
npm install ejs

ejs는 views폴더 안에 위치해야하기 때문에 views폴더 생성.
ejs를 사용하려면 작업 폴더에서 views폴더를 만들고 ejs파일을 옮겨주어야한다
(images 폴더에 이미지를 넣는 개념, 똑같진 않다)

server.js 에 라이브러리 삽입
app.set('view engine', 'ejs');
ejs파일은 sendFile가 아니라
render('파일명'); ex)=> render('list.ejs'); 
그리고 파일명에는 경로가 붙지 않고 파일명만 붙는다, 
/list.ejs = X
/list.ejs = O
ejs를 서버에서 받아 렌더링할 때
response.render('파일명', {보내는개체명 : 데이터베이스명.컬렉션명});
ex)
res.render('index.ejs', {todoApp:todoappDB.todoapp});

그리고 수업 중 list.ejs 파일 생성.
ejs는 전처리 된 html 형식의 문서이다. 
react인 jsx는 자바스크립트에 html을 꼳아 넣은 것
ejs는 html에 자바스크립트를 꼳아 넣은 것, 
<script /> 없이 자바스크립트, nodejs 문법 사용

<% %> => 스크립트 사용 가능
<%= %> => 서버로 부터 온 값

ejs파일에서 주석은 #이다 ex) => <%#

findOne(조건, 콜백);

---------------------------------------------------------------------------------

삭제하기

express nodejs 검색

expressjs ajax 검색

jquery ajax delete method 검색

터미널에서
npm install method-override
그리고 라이브러리
const methodoverride = require('method-override');
app.use(methodOverride('_method'));

---------------------------------------------------------------------------------

★

react + nodejs

react로 작업한 build파일을 nodejs로 서버폴더를 생성한 뒤 거기로 옮긴다
그리고 build를 불러오기 위한 middlewear설치

app.use(express.static(__dirname + '/build'));

---------------------------------------------------------------------------------

네아로 javascript
네아로 nodejs
네이버 개발센터

---------------------------------------------------------------------------------

서버구축시 get, post, put, delete 만 사용하는 것이 요즘 트렌드..
이것의 하드코딩을 쉽게 바꿔주는 것이 express

put이나 delete는 html이 제공해주지 않기 때문에 다른 프로그램 설치가 필요하다

---------------------------------------------------------------------------------

javaScript는 기본적으로 ""가 들어가는 json파일로 주고받는다.
그래서 axios?

---------------------------------------------------------------------------------

나의 컴퓨터를 항상 켜놓을 순 없기 때문에 우리는 호스팅이 아니라 기존의
서버를 임대해야한다.

google cloud platform (platform은 무엇인가를 할 수 있는 장을 만들어주는 곳)
(nodejs또한 server개념보다는 javaScript를 위한 platfrom이다)

---------------------------------------------------------------------------------

report13
front와 back의 융합,
front는 react나 기본코딩, back은 node.js와 mongodb를 이용하자
융합을 하고 mongodb와 react연동이 힘들다면 db와 관련 된 것은
ejs파일을 이용해서 하자 

javaScript는 기본적으로 ""가 들어가는 json파일로 주고받는다.
그래서 axios?
?????
app.get('/data', (req, res)=>{
     res.json({title:'안녕하세요'});
     // db에서 자료를 찾는다
     // 찾은 자료를 json형태로 front로 전달한다
}

----------------------------------------------------------------------------------

개인별 웹 애플리케이션(개인별 포트폴리오 등 자유주제)을 제작하려고 합니다. 
아래의 작업지시 내용을 참고하여 프론트엔드 프로젝트와 백엔드개발 프로젝트를
통합하여 서비스 가능하도록 구현하세요.(별도의 지시사항이 없는 것은 피평가자
의 생각대로 구성하세요)

① 지시사항
   - 선택한 주제에 접합한 프론트엔드와 백엔드를 별도로 개발하세요
   - 개발된 프론트엔드 결과물을 서비스 가능하도록 build할것(소스파일은 
    최소화하여 별도 제출, build폴더, node_modules폴더를 제외 하고 압축)
   - 백엔드의 데이터베이스는 피평가자의 판단에 따라 내,외부 데이터베이스를 
    이용할것(SQL, MoSQL등)
   - 개발 언어와 플렛폼은 훈련생 본인이 선택하여 사용할 것 
    (예:javascript,react,nodejs,jsp,java등)

※ 유의사항
   - 작업코드와 결과물은 문항별로 정리하고 설명파일은
   “통합구현-훈련생 성명.pdf” 파일로 저장하시오
   - 통합프로젝트 동일 위치에 배치하고 소스파일은 최소화하여 
   압축(성명.ZIP)파일로 제출하시오
   - 평가 결과물은 훈련생 본인의 깃허브 (https://www.github.com) 상의
   "report13" 레파지토리에 업로드 하세요


아시아의 숨겨진 보물, 보라카이 섬에 다녀왔습니다.

보라카이섬은 필리핀의 섬으로 길이는 12km로 총면적은 11km²이며 인구는 약 1만 3,000명이다. 보라카이섬과 해변은 세계적인 여행 잡지와 여행사로부터 좋은 평을 얻어왔다. 보라카이섬은 아클란주 말라이, 마녹마녹 바랑가이에 위치해 있다.

파리 여행 기록 첫 번째, 열심히 먹고 열심히 걷기 ^^

카르티에 라탱으로도 불리는 파리 5구는 소르본 대학교와 학생들로 북적이는 카페로 잘 알려져 있습니다. 유명한 셰익스피어 앤드 컴퍼니 등의 서점도 이 지역에 위치해 있습니다. 파리 식물원과 국립 자연사 박물관은 가족이 함께 즐길 수 있는 관광 명소입니다. 웅장한 자태를 뽐내는 팡테옹 건물에는 볼테르와 마리 퀴리 등 저명한 인사의 묘소가 안치되어 있습니다.

4박 5일 괌 자유여행!! 꿀팁 털어요!

괌은 오세아니아의 미크로네시아 마리아나 제도에 있는 미국의 해외 속령이다. 차모로인들이 약 4000년 전에 이곳에 정착해 원주민이 되었다. 마리아나 제도에서 가장 큰 섬이며 또한 최남단에 있는 섬으로 주도는 하갓냐이다.


